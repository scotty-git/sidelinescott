"""add_prompt_template_id_to_evaluations

Revision ID: f41ecfe016fe
Revises: 840f63691b95
Create Date: 2025-07-15 12:39:13.597575

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f41ecfe016fe'
down_revision: Union[str, Sequence[str], None] = '840f63691b95'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_prompt_templates_unique_default'), table_name='prompt_templates', postgresql_where='(is_default = true)')
    op.drop_table('prompt_templates')
    op.drop_table('prompt_usage')
    op.drop_constraint(op.f('evaluations_prompt_template_id_fkey'), 'evaluations', type_='foreignkey')
    op.drop_column('evaluations', 'prompt_template_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('evaluations', sa.Column('prompt_template_id', sa.UUID(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('evaluations_prompt_template_id_fkey'), 'evaluations', 'prompt_templates', ['prompt_template_id'], ['id'])
    op.create_table('prompt_usage',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('template_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('turn_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('conversation_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('rendered_prompt', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('variables_used', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('token_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('processing_time_ms', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('confidence_score', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('corrections_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('context_turns_used', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('prompt_usage_pkey'))
    )
    op.create_table('prompt_templates',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('template', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('variables', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('version', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_default', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('prompt_templates_pkey')),
    sa.UniqueConstraint('name', name=op.f('prompt_templates_name_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('idx_prompt_templates_unique_default'), 'prompt_templates', ['is_default'], unique=True, postgresql_where='(is_default = true)')
    # ### end Alembic commands ###
