"""Remove cleaning fields from turns table

Revision ID: a9da2f22fbec
Revises: 121cab1222e4
Create Date: 2025-07-11 17:37:24.284362

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a9da2f22fbec'
down_revision: Union[str, Sequence[str], None] = '121cab1222e4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('turns', 'cleaning_applied')
    op.drop_column('turns', 'timing_breakdown')
    op.drop_column('turns', 'processing_time_ms')
    op.drop_column('turns', 'gemini_prompt')
    op.drop_column('turns', 'cleaned_text')
    op.drop_column('turns', 'context_detected')
    op.drop_column('turns', 'confidence_score')
    op.drop_column('turns', 'cleaning_level')
    op.drop_column('turns', 'gemini_response')
    op.drop_column('turns', 'corrections')
    op.drop_column('turns', 'ai_model_used')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('turns', sa.Column('ai_model_used', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('turns', sa.Column('corrections', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), autoincrement=False, nullable=True))
    op.add_column('turns', sa.Column('gemini_response', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('turns', sa.Column('cleaning_level', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('turns', sa.Column('confidence_score', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('turns', sa.Column('context_detected', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('turns', sa.Column('cleaned_text', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('turns', sa.Column('gemini_prompt', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('turns', sa.Column('processing_time_ms', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('turns', sa.Column('timing_breakdown', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True))
    op.add_column('turns', sa.Column('cleaning_applied', sa.VARCHAR(), autoincrement=False, nullable=True))
    # ### end Alembic commands ###
